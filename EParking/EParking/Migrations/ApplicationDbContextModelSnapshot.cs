// <auto-generated />
using System;
using EParking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EParking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EParking.Models.Korisnik", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Invaliditet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Korisnik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("EParking.Models.Mjesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kolona")
                        .HasColumnType("int");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.Property<int>("Sprat")
                        .HasColumnType("int");

                    b.Property<bool>("Zauzeto")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.ToTable("Mjesto");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mjesto");
                });

            modelBuilder.Entity("EParking.Models.OsobaSInvaliditetomPopust", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("OsobaSInvaliditetomPopust");
                });

            modelBuilder.Entity("EParking.Models.Rezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("MjestoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeIsteka")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("VrijemePocetka")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("EParking.Models.StalniGostMjesecnoPopust", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StalniGostMjesecnoPopust");
                });

            modelBuilder.Entity("EParking.Models.StalniGostUzastopnoPopust", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StalniGostUzastopnoPopust");
                });

            modelBuilder.Entity("EParking.Models.RegistrovaniKorisnik", b =>
                {
                    b.HasBaseType("EParking.Models.Korisnik");

                    b.Property<int>("ProvedenoVrijeme")
                        .HasColumnType("int");

                    b.Property<int>("UzastopnoVrijeme")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("RegistrovaniKorisnik");
                });

            modelBuilder.Entity("EParking.Models.AutobusMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.Property<double>("Cijena")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("AutobusMjesto");
                });

            modelBuilder.Entity("EParking.Models.AutomobilMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.HasDiscriminator().HasValue("AutomobilMjesto");
                });

            modelBuilder.Entity("EParking.Models.BicikloMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.HasDiscriminator().HasValue("BicikloMjesto");
                });

            modelBuilder.Entity("EParking.Models.KamionMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.HasDiscriminator().HasValue("KamionMjesto");
                });

            modelBuilder.Entity("EParking.Models.KampKucicaMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.HasDiscriminator().HasValue("KampKucicaMjesto");
                });

            modelBuilder.Entity("EParking.Models.MotociklMjesto", b =>
                {
                    b.HasBaseType("EParking.Models.Mjesto");

                    b.HasDiscriminator().HasValue("MotociklMjesto");
                });
#pragma warning restore 612, 618
        }
    }
}
